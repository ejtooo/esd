<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled" />
	<http pattern="/js/**" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/images/**" security="none" />

	<http auto-config="true" access-denied-page="/jsp/403.jsp">
		<!-- <intercept-url pattern="/index.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY" 
			/> <intercept-url pattern="/index.html" access="IS_AUTHENTICATED_ANONYMOUSLY" 
			/> -->
		<intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/index.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/code.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/login.html*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- <intercept-url pattern="/login.html" access="IS_AUTHENTICATED_ANONYMOUSLY" 
			/> -->
		<intercept-url pattern="/**" access="ROLE_USER" />

		<session-management invalid-session-url="/login.html"
			session-fixation-protection="none">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="false" expired-url="/login.html" />
		</session-management>

		<form-login login-page="/login.html"
			authentication-failure-url="/login.html" default-target-url="/index.html" />
		<logout invalidate-session="true" logout-url="/logout" />

		<custom-filter ref="secureFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<beans:bean id="secureFilter" class="com.gooseeker.util.ThemeSecurityFilter">
		<!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="themeAuthenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager" ref="themeAccessDecisionManager" />
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource" ref="themeSecurityMetadataSource" />
	</beans:bean>

	<authentication-manager alias="themeAuthenticationManager">
		<authentication-provider user-service-ref="userDetailServiceImpl" />
	</authentication-manager>

	<!--访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="themeAccessDecisionManager"
		class="com.gooseeker.util.ThemeAccessDecisionManager" />
	<!--资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="themeSecurityMetadataSource"
		class="com.gooseeker.util.ThemeSecurityMetadataSource" />
	<beans:bean id="userDetailServiceImpl" class="com.gooseeker.util.UserDetailServiceImpl" />

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
</beans:beans>